<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>English to Karenni Dictionary</title>
    <style>
        body {
            font-family: Arial, sans-serif;
            max-width: 800px;
            margin: 0 auto;
            padding: 20px;
        }
        h1 {
            text-align: center;
            color: #333;
        }
        .search-container {
            margin: 20px 0;
            display: flex;
            gap: 10px;
            position: relative;
        }
        .input-wrapper {
            position: relative;
            flex-grow: 1;
        }
        input {
            padding: 10px;
            padding-right: 30px;
            width: 100%;
            box-sizing: border-box;
            font-size: 16px;
        }
        .clear-symbol {
            position: absolute;
            right: 10px;
            top: 50%;
            transform: translateY(-50%);
            cursor: pointer;
            font-size: 16px;
            color: #666;
            display: none;
        }
        .clear-symbol:hover {
            color: #f44336;
        }
        button {
            padding: 10px 20px;
            background-color: #4CAF50;
            color: white;
            border: none;
            cursor: pointer;
        }
        button:hover {
            background-color: #45a049;
        }
        .related-words {
            position: absolute;
            top: 100%;
            left: 0;
            width: 100%;
            background: white;
            border: 1px solid #ddd;
            border-radius: 5px;
            max-height: 200px;
            overflow-y: auto;
            display: none;
            z-index: 1;
        }
        .related-word {
            padding: 8px;
            cursor: pointer;
        }
        .related-word:hover {
            background-color: #f0f0f0;
        }
        .results {
            margin-top: 20px;
            display: none;
        }
        .translation-box, .examples-box {
            border: 1px solid #ddd;
            padding: 15px;
            margin: 10px 0;
            border-radius: 5px;
        }
        .footer {
            text-align: center;
            margin-top: 40px;
            color: #666;
            font-size: 14px;
        }
    </style>
</head>
<body>
    <h1>English to Karenni Dictionary</h1>
    
    <div class="search-container">
        <div class="input-wrapper">
            <input type="text" id="searchInput" placeholder="Enter word to translate...">
            <span class="clear-symbol" id="clearSymbol" onclick="clearSearch()">✖</span>
            <div class="related-words" id="relatedWords"></div>
        </div>
        <button id="translateBtn">Go</button>
    </div>

    <div class="results" id="results">
        <div class="translation-box" id="translation"></div>
        <div class="examples-box" id="examples"></div>
    </div>

    <div class="footer">Created: Daw Ta Ma Gyi</div>

    <script>
        const dictionary = {
     "abandon": {translation: "/v/ꤘꤛꤢ꤬ꤊꤛꤢ꤭, ꤠꤤ꤭ꤊꤛꤢ꤭",
            examples: ["1. Did you abandon it? ꤘꤛꤢ꤬ꤊꤛꤢ꤭ꤟꤢꤧ꤭꤫꤫?",
                        "2. How do you abandon it? ꤘꤛꤢ꤬ꤊꤛꤢ꤭ꤙꤢꤒꤢꤩ꤭?",
                        "3. I want to abandon it more. ꤠꤢ꤭ ꤞꤢꤧꤐꤟꤢꤦ ꤘꤛꤢ꤬ꤊꤛꤢ꤭ꤜꤣ ꤒꤣ꤬ꤊꤟꤌꤣ꤬꤯"]},

"abdomen": {translation: "/n/ꤟꤢꤪꤊꤢꤨ꤭, ꤟꤢꤪ",
            examples: ["1. Is it the abdomen? ꤟꤢꤪꤊꤢꤨ꤭ꤟꤢꤧ꤭꤫꤫?",
                        "2. How big is the abdomen? ꤟꤢꤪꤊꤢꤨ꤭ꤙꤢꤒꤢꤩ꤭?",
                        "3. I want a bigger abdomen. ꤠꤢ꤭ ꤞꤢꤧꤐꤟꤢꤦ ꤟꤢꤪꤊꤢꤨ꤭ꤜꤣ ꤒꤣ꤬ꤊꤟꤌꤣ꤬꤯"]},

"abdominal pain": {translation: "/n/ꤏꤢꤧ꤭ꤟꤢꤪ /v/ ꤏꤢꤧ꤭ꤟꤢꤪ",
                    examples: ["1. Do you have abdominal pain? ꤏꤢꤧ꤭ꤟꤢꤪꤟꤢꤧ꤭꤫꤫?",
                                "2. How severe is the abdominal pain? ꤏꤢꤧ꤭ꤟꤢꤪꤙꤢꤒꤢꤩ꤭?",
                                "3. I want less abdominal pain. ꤠꤢ꤭ ꤞꤢꤧꤐꤟꤢꤦ ꤏꤢꤧ꤭ꤟꤢꤪꤜꤣ ꤒꤣ꤬ꤊꤟꤌꤣ꤬꤯"]},

"ability": {translation: "/n/ꤒꤟꤢꤧ꤬ꤡꤟꤛꤢꤒꤟꤢꤧ꤬ꤘꤢꤧ꤬, ꤒꤟꤢꤧ꤬ꤡꤟꤛꤢꤘꤢꤧ꤬",
            examples: ["1. Do you have ability? ꤒꤟꤢꤧ꤬ꤡꤟꤛꤢꤒꤟꤢꤧ꤬ꤘꤢꤧ꤬ꤟꤢꤧ꤭꤫꤫?",
                        "2. How much ability do you have? ꤒꤟꤢꤧ꤬ꤡꤟꤛꤢꤒꤟꤢꤧ꤬ꤘꤢꤧ꤬ꤙꤢꤒꤢꤩ꤭?",
                        "3. I want more ability. ꤠꤢ꤭ ꤞꤢꤧꤐꤟꤢꤦ ꤒꤟꤢꤧ꤬ꤡꤟꤛꤢꤒꤟꤢꤧ꤬ꤘꤢꤧ꤬ꤜꤣ ꤒꤣ꤬ꤊꤟꤌꤣ꤬꤯"]},

"able": {translation: "/adj/ꤡꤟꤛꤢ, ꤡꤟꤛꤢꤙꤢꤧ /v/ ꤕꤢꤩ",
         examples: ["1. Are you able? ꤡꤟꤛꤢꤟꤢꤧ꤭꤫꤫?",
                     "2. How able are you? ꤡꤟꤛꤢꤙꤢꤒꤢꤩ꤭?",
                     "3. I want to be more able. ꤠꤢ꤭ ꤞꤢꤧꤐꤟꤢꤦ ꤡꤟꤛꤢꤜꤣ ꤒꤣ꤬ꤊꤟꤌꤣ꤬꤯"]},

"abomination": {translation: "/n/ꤒꤟꤢꤧ꤬ꤏꤤꤐꤟꤢꤪꤏꤤꤚꤟꤛꤢ꤭",
                examples: ["1. Is it an abomination? ꤒꤟꤢꤧ꤬ꤏꤤꤐꤟꤢꤪꤏꤤꤚꤟꤛꤢ꤭ꤟꤢꤧ꤭꤫꤫?",
                            "2. How bad is the abomination? ꤒꤟꤢꤧ꤬ꤏꤤꤐꤟꤢꤪꤏꤤꤚꤟꤛꤢ꤭ꤙꤢꤒꤢꤩ꤭?",
                            "3. I want a worse abomination. ꤠꤢ꤭ ꤞꤢꤧꤐꤟꤢꤦ ꤒꤟꤢꤧ꤬ꤏꤤꤐꤟꤢꤪꤏꤤꤚꤟꤛꤢ꤭ꤜꤣ ꤒꤣ꤬ꤊꤟꤌꤣ꤬꤯"]},

"aborted": {translation: "/v/ꤖꤢꤨꤜꤢ꤬ꤜꤝꤥ",
            examples: ["1. Was it aborted? ꤖꤢꤨꤜꤢ꤬ꤜꤝꤥꤟꤢꤧ꤭꤫꤫?",
                        "2. How was it aborted? ꤖꤢꤨꤜꤢ꤬ꤜꤝꤥꤙꤢꤒꤢꤩ꤭?",
                        "3. I want it aborted more. ꤠꤢ꤭ ꤞꤢꤧꤐꤟꤢꤦ ꤖꤢꤨꤜꤢ꤬ꤜꤝꤥꤜꤣ ꤒꤣ꤬ꤊꤟꤌꤣ꤬꤯"]},

            "ꤓꤛꤢꤩ꤭": {
                translation: "water /n/",
                examples: [
                    "1. I am drinking water. ꤠꤢ꤭ ꤥ꤭ꤓꤛꤢꤩ꤭꤯",
                    "2. Water is boiling. ꤓꤛꤢꤩ꤭ꤊꤟꤢꤨꤙꤢꤪ꤯",
                    "3. I need water. ꤠꤢ꤭ ꤜꤥ꤬ꤙꤢꤧ꤬ꤓꤛꤢꤩ꤭꤯"
                ]
            },
            "ꤢ꤬ꤘꤢꤨ꤬": {
                translation: "big /adj/",
                examples: [
                    "1. Is it big? ꤢ꤬ꤘꤢꤨ꤬ꤟꤢꤧ꤭꤫꤫",
                    "2. How big is it? ꤢ꤬ꤘꤢꤨ꤬ꤙꤢꤒꤢꤩ꤭?",
                    "3. I want bigger one. ꤠꤢ꤭ ꤞꤢꤧꤐꤟꤢꤦ ꤢ꤬ꤘꤢꤨ꤬ꤜꤣ ꤒꤣ꤬ꤊꤟꤌꤣ꤬꤯"
                ]
            },
            "ꤢꤧ꤬ꤞꤤ꤭": {
                translation: "they /Pro/",
                examples: [
                    "1. They are going now. ꤢꤧꤞꤤ꤭ꤡꤛꤣꤋꤥ꤭ꤑꤟꤢ ꤟꤢꤪ ꤯",
                    "2. Where are they? ꤢꤧ꤬ꤞꤤ꤭ ꤥ꤬ꤙꤤꤒꤢꤩ꤭?",
                    "3. They are tall. ꤢꤧ꤬ꤞꤤ꤭ꤗꤢ꤬ ꤢ꤬ꤓꤢꤨ꤭꤯"
                ]
            }
        };

  const searchInput = document.getElementById('searchInput');
        const translateBtn = document.getElementById('translateBtn');
        const clearSymbol = document.getElementById('clearSymbol');
        const relatedWordsDiv = document.getElementById('relatedWords');
        const resultsDiv = document.getElementById('results');
        const translationDiv = document.getElementById('translation');
        const examplesDiv = document.getElementById('examples');

        function translate() {
            const searchTerm = searchInput.value.trim();
            const searchTermLower = searchTerm.toLowerCase();
            
            if (!searchTerm) {
                resultsDiv.style.display = 'none';
                translationDiv.innerHTML = '';
                examplesDiv.innerHTML = '';
                return;
            }

            let entry = dictionary[searchTerm];
            if (!entry) {
                entry = dictionary[searchTermLower];
            }
            if (!entry) {
                entry = Object.values(dictionary).find(item => 
                    item.translation.includes(searchTerm)
                );
            }

            if (entry) {
                resultsDiv.style.display = 'block';
                translationDiv.textContent = entry.translation;
                examplesDiv.innerHTML = entry.examples.map(example => `<p>${example}</p>`).join('');
            } else {
                resultsDiv.style.display = 'block';
                translationDiv.textContent = 'Word not found';
                examplesDiv.innerHTML = '';
            }
            relatedWordsDiv.style.display = 'none';
        }

        function clearSearch() {
            searchInput.value = '';
            resultsDiv.style.display = 'none';
            translationDiv.innerHTML = '';
            examplesDiv.innerHTML = '';
            clearSymbol.style.display = 'none';
            relatedWordsDiv.style.display = 'none';
        }

        function showRelatedWords() {
            const searchTerm = searchInput.value.trim();
            relatedWordsDiv.innerHTML = '';
            
            if (!searchTerm) {
                relatedWordsDiv.style.display = 'none';
                clearSymbol.style.display = 'none';
                return;
            }

            clearSymbol.style.display = 'block';
            const related = [];
            const searchLower = searchTerm.toLowerCase();

            // Collect all matching words
            Object.entries(dictionary).forEach(([key, value]) => {
                if (key.toLowerCase().includes(searchLower) || 
                    value.translation.toLowerCase().includes(searchLower)) {
                    related.push(key);
                }
            });

            if (related.length > 0) {
                // Sort: prefix matches first, then other matches
                related.sort((a, b) => {
                    const aStartsWith = a.toLowerCase().startsWith(searchLower);
                    const bStartsWith = b.toLowerCase().startsWith(searchLower);
                    
                    if (aStartsWith && !bStartsWith) return -1;
                    if (!aStartsWith && bStartsWith) return 1;
                    return a.localeCompare(b); // Alphabetical order within each group
                });

                relatedWordsDiv.style.display = 'block';
                related.slice(0, 10).forEach(word => {
                    const div = document.createElement('div');
                    div.className = 'related-word';
                    div.textContent = word;
                    div.onclick = () => {
                        searchInput.value = word;
                        relatedWordsDiv.style.display = 'none';
                        translate();
                    };
                    relatedWordsDiv.appendChild(div);
                });
            } else {
                relatedWordsDiv.style.display = 'none';
            }
        }

        // Show related words while typing
        searchInput.addEventListener('input', function() {
            showRelatedWords();
            if (!searchInput.value.trim()) {
                resultsDiv.style.display = 'none';
                translationDiv.innerHTML = '';
                examplesDiv.innerHTML = '';
            }
        });

        // Translate on Enter key
        searchInput.addEventListener('keypress', function(e) {
            if (e.key === 'Enter') {
                translate();
            }
        });

        // Translate on button click
        translateBtn.addEventListener('click', translate);
    </script>
</body>
</html>